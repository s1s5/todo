version: '3.5'

x-app-base:
  &app-base
  build:
    context: .
    dockerfile: Dockerfile
  environment:
    - DEBUG=True
    - DATABASE_URL=psql://psqluser:psqlpass@db/todo
    - PYTHONUNBUFFERED=1
    - MEDIA_ROOT=/data/media
  volumes:
    - .:/usr/src/app
    - media_root:/data/media
  depends_on:
    - db
  user: ${USER_ID}:${GROUP_ID}

volumes:
  pg_data:
  media_root:

services:
  db:
    image: postgres:11.2
    environment:
      - POSTGRES_USER=psqluser
      - POSTGRES_PASSWORD=psqlpass
      - POSTGRES_DB=todo
      - PGDATA=/postgres/data
    volumes:
      - pg_data:/postgres/data
    command: postgres -c max_connections=1000

  app:
    << : *app-base
    ports:
      - "42100:8000"
    command: |
      bash -c "
      sleep 1; if [ ! -f /data/media/.first ]; then sleep 10; touch /data/media/.first; fi;
      python manage.py migrate --noinput;
      while [ true ]; do python manage.py runserver 0.0.0.0:8000 ; sleep 10; done"

  schema-builder:
    << : *app-base
    # command: |
    #   bash -c "
    #   watchmedo auto-restart -d /usr/src/app --recursive -p '*.py' -- python manage.py graphql_schema
    #   "
    command: |
      bash -c "
      while [ true ]; do python manage.py graphql_schema --watch ; sleep 10; done
      "

  # schema-to-js:
  #   build:
  #     context: tools
  #     dockerfile: node+watchdog.Dockerfile
  #   command: |
  #     bash -c "
  #     cd app/jsapp; watchmedo auto-restart -d /app -p '*schema.json' -- npm run generate
  #     "
  #   volumes:
  #     - .:/app
  #   user: ${USER_ID}:${GROUP_ID}

  relay-builder:
    image: s1s5/watchnode
    command: |
      bash -c "
      cd /app; watchman; while [ true ]; do npm run relay -- --watch ; sleep 10; done
      "
    volumes:
      - .:/app
    user: ${USER_ID}:${GROUP_ID}

# following services must be off in macbook. This consumes much energy
#   js-builder:
#     build:
#       context: tools
#       dockerfile: node+watchdog.Dockerfile
#     command: |
#       bash -c "
#       cd app/jsapp; npm run build:watch
#       "
#     # command: |
#     #   bash -c "
#     #   cd app/jsapp; watchmedo auto-restart -d /app --recursive -p '*.tsx' -- npm run build
#     #   "
#     volumes:
#       - .:/app
#     user: ${USER_ID}:${GROUP_ID}
  
